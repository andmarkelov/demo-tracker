{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/has.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/Map.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/TextFeature.js","node_modules/ol/src/geom/flat/flip.js","node_modules/ol/src/format/Polyline.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","src/main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.TEXT;\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\nexport default TextFeature;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_dest,\n  opt_destOffset\n) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {assert} from '../asserts.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [opt_options] Optional configuration object.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/GeometryLayout\").default}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : GeometryLayout.XY;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, opt_options) {\n    const geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, opt_options) {\n    const feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, opt_options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(opt_options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, opt_options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, opt_options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(\n          geometry,\n          true,\n          this.adaptOptions(opt_options)\n        )\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","import 'ol/ol.css';\nimport Feature from 'ol/Feature';\nimport Map from 'ol/Map';\nimport Point from 'ol/geom/Point';\nimport Polyline from 'ol/format/Polyline';\nimport View from 'ol/View';\nimport {OSM, Vector as VectorSource} from 'ol/source';\n\n\nimport {\n    Circle as CircleStyle,\n    Fill,\n    Icon,\n    Stroke,\n    Style,\n} from 'ol/style';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport {getCenter} from \"ol/extent\";\n\nconst attributions =\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\nconst center = [-0, -0];\n\nconst mapView = new View({\n    center: center,\n    zoom: 1,\n    minZoom: 1,\n    maxZoom: 20,\n});\n\n\nconst map = new Map({\n    target: document.getElementById('map'),\n    view: mapView,\n    layers: [\n        new TileLayer({\n            source: new OSM(),\n        }),\n    ],\n});\n\nwindow.addEventListener(\"message\", function(e) {\n    const polyline = e.data.geo;\n\n    const pl = new Polyline({\n        factor: 1e6,\n    });\n\n    const route = pl.readGeometry(polyline, {\n        dataProjection: 'EPSG:4326',\n        featureProjection: 'EPSG:3857',\n    });\n\n\n    const routeFeature = new Feature({\n        type: 'route',\n        geometry: route,\n    });\n    const startMarker = new Feature({\n        type: 'icon',\n        geometry: new Point(route.getFirstCoordinate()),\n    });\n    const endMarker = new Feature({\n        type: 'icon',\n        geometry: new Point(route.getLastCoordinate()),\n    });\n    const position = startMarker.getGeometry().clone();\n    const geoMarker = new Feature({\n        type: 'geoMarker',\n        geometry: position,\n    });\n\n    const styles = {\n        'route': new Style({\n            stroke: new Stroke({\n                width: 6,\n                color: [237, 212, 0, 0.8],\n            }),\n        }),\n        'icon': new Style({\n            image: new Icon({\n                anchor: [0.5, 1],\n                src: 'data/icon.png',\n            }),\n        }),\n        'geoMarker': new Style({\n            image: new CircleStyle({\n                radius: 7,\n                fill: new Fill({color: 'black'}),\n                stroke: new Stroke({\n                    color: 'white',\n                    width: 2,\n                }),\n            }),\n        }),\n    };\n\n    const vectorLayer = new VectorLayer({\n        source: new VectorSource({\n            features: [routeFeature, geoMarker, startMarker, endMarker],\n        }),\n        style: function (feature) {\n            return styles[feature.get('type')];\n        },\n    });\n\n    //clean up from the previous route layer\n    var toRemove = new Set();\n    map.getLayers().getArray().forEach(l => {\n        //console.log(f)\n        if(l.isRoute) {\n            toRemove.add(l)\n        }\n    })\n\n    toRemove.forEach(l => {\n        map.getLayers().remove(l)\n    })\n\n    //add a new route layer\n    vectorLayer.__proto__.isRoute = true;\n    map.addLayer(vectorLayer);\n\n\n    mapView.fit(routeFeature.getGeometry(), {padding: [100, 100, 100, 100], minResolution: 50})\n}, false);\n\n"],"names":["$23cc37b221334df5$export$2e2bcd8739ae039","BaseEvent1","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$f182d89dddef1ea8$export$2e2bcd8739ae039","PROPERTYCHANGE","$198f17545c774c60$export$2e2bcd8739ae039","Disposable1","disposed","dispose","disposeInternal","$242d04b4abe8e74a$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$242d04b4abe8e74a$export$4e734a3b32fb971b","low","high","length","found","a","b","$242d04b4abe8e74a$export$8a3786cc03fdb777","arr","direction","n","i","$242d04b4abe8e74a$export$292cfa960964f0e0","begin","end","tmp","$242d04b4abe8e74a$export$8b58be045bf06082","data","extension","Array","isArray","$242d04b4abe8e74a$export$e9bab7fafb253603","arr1","arr2","len1","$e8bb49b0723cf385$export$22e23a2304399231","$e8bb49b0723cf385$export$8f11cee4bdc7e668","$e8bb49b0723cf385$export$1cd1943b3a73bbe8","$d57f519927fa72cd$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$d57f519927fa72cd$export$42ffd38884aecdac","object","property","$d57f519927fa72cd$export$a5c4301012ad6f07","values","push","$d57f519927fa72cd$export$dd1bc94b04021eeb","$ca140b686b49c1e3$export$2e2bcd8739ae039","_super","Target1","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$ca140b686b49c1e3$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$17528e13835ea298$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$ddbfda1fb7b83a89$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$ddbfda1fb7b83a89$export$8d2a95bc11b44725","$ddbfda1fb7b83a89$export$b0a21c8b3c1c921","$b205a5a0a479f629$var$Observable","Observable1","on","onInternal","once","onceInternal","un","unInternal","revision_","$b205a5a0a479f629$var$__extends","changed","getRevision","len","ol_key","$b205a5a0a479f629$export$b7ef3f8527533384","$ca140b686b49c1e3$exports","default","$b205a5a0a479f629$export$2e2bcd8739ae039","$b72bee802ee7837c$export$817eb92a8194bab0","Error","$b72bee802ee7837c$var$uidCounter_","$b72bee802ee7837c$export$5e82334337e0f204","obj","ol_uid","String","$b72bee802ee7837c$export$a4ad2735b021c132","$02ff1a30291f579c$export$cf395d7c4a2d5a17","ObjectEvent1","oldValue","$02ff1a30291f579c$var$__extends","$02ff1a30291f579c$export$2e2bcd8739ae039","BaseObject1","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$b205a5a0a479f629$exports","$d51b57da984548f6$export$2e2bcd8739ae039","AssertionError1","code","message","split","name","$d51b57da984548f6$var$__extends","$260eb39d4574b27d$export$a7a9523472993e97","assertion","errorCode","$d51b57da984548f6$exports","$391871f9a2e5834b$export$bb06ddfd5d66e02e","styles_1","getZIndex","$391871f9a2e5834b$export$2e2bcd8739ae039","Feature1","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$391871f9a2e5834b$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$02ff1a30291f579c$exports","$67dae15869f57ba2$var$transformStringDiv","$557f882b5755ab40$var$ua","navigator","userAgent","toLowerCase","$557f882b5755ab40$export$8442bdfd18b7b8a6","$557f882b5755ab40$export$39dfd62a25e0fe93","match","$557f882b5755ab40$export$76c0a3b101d93136","$557f882b5755ab40$export$6b83a0446fc26f94","devicePixelRatio","$557f882b5755ab40$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$557f882b5755ab40$export$716f8695eedb9bad","Image","decode","$557f882b5755ab40$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$67dae15869f57ba2$export$adaa4cf7ef1b65be","transform","c","d","e","f","$67dae15869f57ba2$export$5635d7ef4b8fee1c","coordinate","x","y","$67dae15869f57ba2$export$3e4e33ea14aeb531","$67dae15869f57ba2$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$67dae15869f57ba2$export$bd70ea2a93c0fa4","mat","det","$67dae15869f57ba2$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$42857dc1e4e39ae1$export$2e2bcd8739ae039","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$2034d68cc04dd519$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$09aee13076acae13$export$8aceca7c77505534","coordinates","extent","$09aee13076acae13$export$fe201bb3bbe031e9","$09aee13076acae13$export$1f820e3920fa5715","$09aee13076acae13$export$ab1029bcae9ddb4a","opt_extent","$09aee13076acae13$export$9cd59f9826255e47","slice","$09aee13076acae13$export$cbe64c389534206f","dx","dy","$09aee13076acae13$export$ac68c24d37ca240f","$09aee13076acae13$export$805bdfd6d6690e97","$09aee13076acae13$export$be866b1e0809b17e","extent1","extent2","$09aee13076acae13$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$09aee13076acae13$export$958e3e1a02eac4b6","$09aee13076acae13$export$3e2152b047719fa1","$09aee13076acae13$export$e9bab7fafb253603","$09aee13076acae13$export$30570204156ffd18","flatCoordinates","offset","stride","$09aee13076acae13$export$f1dab130b92b85a9","min","max","$09aee13076acae13$export$f9ed8a3d123a08e2","callback","val","$09aee13076acae13$export$8d09f5e2e1bf560d","$09aee13076acae13$export$e77c1cf70445e168","$09aee13076acae13$export$b84fa077c8b05295","$09aee13076acae13$export$cb1538b07e6964ff","$09aee13076acae13$export$520c40045967cb15","area","$09aee13076acae13$export$dd1bc94b04021eeb","$09aee13076acae13$export$3c49c185de0c2bfc","$09aee13076acae13$export$c08559766941f856","$09aee13076acae13$export$c91255cadecfe081","$09aee13076acae13$export$a1cfd206661d0801","corner","$09aee13076acae13$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$09aee13076acae13$export$72209efa88586d42","intersection","$09aee13076acae13$export$7b0a31e10bbff018","$09aee13076acae13$export$6a4fe494c558c238","$09aee13076acae13$export$a6a5a7a461419425","start","intersects1","startRel","endRel","startX","startY","endX","endY","slope","$09aee13076acae13$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$09aee13076acae13$var$_boundingExtentXYs","$09aee13076acae13$export$39a9ce3624977b84","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","$171e0dde495a42af$export$7d15b64cf5a3a4c4","$171e0dde495a42af$export$2e2fd1ad24e4d350","cosh","exp","$171e0dde495a42af$export$b9fae0bba9d9094d","log2","log","LOG2E","$171e0dde495a42af$export$251bb0a9cef172e6","t","$171e0dde495a42af$export$88e6ebb4fe54f538","$171e0dde495a42af$export$8240f01c446270e6","maxRow","maxEl","abs","r","absValue","j","coef","k","m","$171e0dde495a42af$export$56cb859c01fa134d","angleInRadians","PI","$171e0dde495a42af$export$cba01ba138429a1d","angleInDegrees","$171e0dde495a42af$export$ba467bec01d66def","$171e0dde495a42af$export$3a89f8d6f6bf6c9f","$171e0dde495a42af$export$a81f732198733497","decimals","factor","pow","round","$171e0dde495a42af$export$a3fe094919f356fd","$171e0dde495a42af$export$803ce6b71a0a94b2","ceil","$50211efa3313caf5$var$HEX_COLOR_RE_","$50211efa3313caf5$var$NAMED_COLOR_RE_","$50211efa3313caf5$export$590567be997858b6","color","$50211efa3313caf5$export$f84e8e69fd4488a5","$50211efa3313caf5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$50211efa3313caf5$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$50211efa3313caf5$export$a3295358bff77e","map","Number","$50211efa3313caf5$var$fromStringInternal_","$50211efa3313caf5$export$75093a47a9fa838d","$2d3f65ee78aa7b11$var$IconImageCache","IconImageCache1","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$2d3f65ee78aa7b11$var$getKey","setSize","maxCacheSize","$2d3f65ee78aa7b11$export$747ccdf771a87ab8","$de08933662e889cc$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","$abe2849bf275faed$export$2e2bcd8739ae039","BaseLayer1","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$abe2849bf275faed$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$6afba345795dd0eb$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$10a428a553b91e25$export$2e2bcd8739ae039","UNDEFINED","LOADING","READY","$3f598d8186f667d5$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$3f598d8186f667d5$export$2e2bcd8739ae039","Layer1","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$3f598d8186f667d5$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$abe2849bf275faed$exports","$9c25d20f9d7ab135$export$e9bab7fafb253603","coordinate1","coordinate2","equals1","$9c25d20f9d7ab135$export$bb628a54ab399bc9","cosAngle","sinAngle","$9c25d20f9d7ab135$export$39a9ce3624977b84","worldsAway","$9c25d20f9d7ab135$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$4d624cc5d18fde9b$var$expireIconCache","$4d624cc5d18fde9b$export$2e2bcd8739ae039","MapRenderer1","map_","$4d624cc5d18fde9b$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$3f598d8186f667d5$exports","inView","getWrapX","callback_1","order","forEach","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$38088ea21604ea9d$export$2e2bcd8739ae039","RenderEvent1","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$38088ea21604ea9d$var$__extends","$71fff7b7ffdcca6e$export$981241db82723ce2","$71fff7b7ffdcca6e$export$4d4f8be70b656192","$71fff7b7ffdcca6e$export$e16017ac68d14492","$71fff7b7ffdcca6e$var$fontRegEx","RegExp","$71fff7b7ffdcca6e$var$fontRegExMatchIndex","$71fff7b7ffdcca6e$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$71fff7b7ffdcca6e$export$52ec625a6a53b6a6","$da5bbe25d8fad2eb$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$da5bbe25d8fad2eb$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$da5bbe25d8fad2eb$export$1d0aa160432dfea5","$da5bbe25d8fad2eb$export$1e1c9bf5a4ffe0d1","lastChild","$da5bbe25d8fad2eb$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$f3299d0ba5b570c1$export$3847dfea4f8d4dfa","$f3299d0ba5b570c1$export$c495d52ee3fd74b2","$f3299d0ba5b570c1$export$17bd0c38d6ae694e","$f3299d0ba5b570c1$export$e21b4112fdc612fc","$f3299d0ba5b570c1$export$365eb9648cf19bd0","$f3299d0ba5b570c1$export$1eb2eaecacf2031e","$f3299d0ba5b570c1$export$94d53b95641b5766","$f3299d0ba5b570c1$export$cf2279a1bff62eb","$f3299d0ba5b570c1$export$40a9eeef55665a40","$f3299d0ba5b570c1$export$1d36981fcadac93b","console","warn","$f3299d0ba5b570c1$var$measureFont","measureElement","$f3299d0ba5b570c1$var$measureContext","$f3299d0ba5b570c1$export$7fdcec604f0b1fa7","$f3299d0ba5b570c1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$f3299d0ba5b570c1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$f3299d0ba5b570c1$export$4feaf6852ff92513","metrics","$f3299d0ba5b570c1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$f3299d0ba5b570c1$export$915c7ba51467308f","$f3299d0ba5b570c1$export$7d7c13020df1e791","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","$f3299d0ba5b570c1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$f3299d0ba5b570c1$var$executeLabelInstructions","drawImage","restore","$d8a652e4527f1969$export$2e2bcd8739ae039","CompositeMapRenderer1","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","$d8a652e4527f1969$var$__extends","event_1","$38088ea21604ea9d$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","getDataAtPixel","$4d624cc5d18fde9b$exports","$d9a0ab5d45e10d29$export$2e2bcd8739ae039","ADD","REMOVE","$55a45667519a063f$var$Property","$55a45667519a063f$export$a87ae6eb2761ec6d","CollectionEvent1","opt_element","opt_index","$55a45667519a063f$var$__extends","$55a45667519a063f$export$2e2bcd8739ae039","Collection1","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$fbe1f30b9b0811de$export$2f5ff21d758d25a7","GroupEvent1","$fbe1f30b9b0811de$var$__extends","$fbe1f30b9b0811de$var$Property","$fbe1f30b9b0811de$export$2e2bcd8739ae039","LayerGroup1","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$55a45667519a063f$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$51fcb9efdec94cd2$export$2e2bcd8739ae039","MapEvent1","$51fcb9efdec94cd2$var$__extends","$dcc91a0eaf5c85b1$export$2e2bcd8739ae039","MapBrowserEvent1","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$dcc91a0eaf5c85b1$var$__extends","getEventPixel","getCoordinateFromPixel","$51fcb9efdec94cd2$exports","$fb224f2039acedbe$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$f7f6b6491b2890ed$export$2e2bcd8739ae039","$308a4eee2e11ac9e$export$2e2bcd8739ae039","MapBrowserEventHandler1","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$308a4eee2e11ac9e$var$__extends","emulateClick_","pointerEvent","newEvent1","$dcc91a0eaf5c85b1$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$a85542ba6ee181e9$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$66376b6b243d2dc1$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$dac38e077a8a1495$export$b4af72c40fd57063","$dac38e077a8a1495$export$2e2bcd8739ae039","PriorityQueue1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b60da4fc04596e98$export$2e2bcd8739ae039","IDLE","LOADED","EMPTY","$286f240d744f313a$export$2e2bcd8739ae039","TileQueue1","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$286f240d744f313a$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$286f240d744f313a$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$5a8dbd971169bbba$export$2e2bcd8739ae039","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$02478b6026332846$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$02478b6026332846$export$1482081eec883108","$02478b6026332846$export$2e2bcd8739ae039","$282e8a7f99c41353$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$c80cb2b125b4e0d9$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6f70a5e237bbd780$export$2e2bcd8739ae039","Projection1","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$a0a3dd962f5651db$export$2d2c9be8b5b863f","$a0a3dd962f5651db$export$f3928063e5e96d35","$a0a3dd962f5651db$export$21e6da8a7375dfe8","$a0a3dd962f5651db$export$ae9d6ed80df710e5","$a0a3dd962f5651db$export$d26945d1ad52feeb","tan","$a0a3dd962f5651db$var$EPSG3857Projection","EPSG3857Projection1","point","$a0a3dd962f5651db$var$__extends","$a0a3dd962f5651db$export$b508d7ad9a891c1b","$a0a3dd962f5651db$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$a0a3dd962f5651db$export$8c71322ec28ed6b4","atan","$c0e91db6b9cdad65$export$21e6da8a7375dfe8","$c0e91db6b9cdad65$export$1482081eec883108","$c0e91db6b9cdad65$var$EPSG4326Projection","EPSG4326Projection1","opt_axisOrientation","$c0e91db6b9cdad65$var$__extends","$c0e91db6b9cdad65$export$b508d7ad9a891c1b","$fa1fc08946082439$var$cache","$fa1fc08946082439$export$e16d8520af44a096","$93a9ea042b1bc378$var$transforms","$93a9ea042b1bc378$export$e16d8520af44a096","destination","sourceCode","destinationCode","$93a9ea042b1bc378$export$3988ae62b71be9a3","$1f8fb04b1e88a5cd$export$63f2df7bd7371262","$1f8fb04b1e88a5cd$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$1f8fb04b1e88a5cd$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51ce273c1692e987$var$showCoordinateWarning","$51ce273c1692e987$export$ed949affbc7c4223","opt_disable","$51ce273c1692e987$export$dd516654c5f598fb","$51ce273c1692e987$export$83e8ab53904f8022","$51ce273c1692e987$export$59ae956cd3e343f7","$51ce273c1692e987$export$3988ae62b71be9a3","projectionLike","replace","$51ce273c1692e987$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$51ce273c1692e987$export$e3c4995a701c26a3","vertices","$51ce273c1692e987$export$eeb8392580a05a37","projections","$51ce273c1692e987$export$638ad73f7aafb913","$51ce273c1692e987$export$549167224996a0fb","defaultCode","$51ce273c1692e987$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$51ce273c1692e987$export$fce0c6cfca85ed96","$51ce273c1692e987$export$51186ad6e864892a","$51ce273c1692e987$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$51ce273c1692e987$var$userProjection","$51ce273c1692e987$export$3973b77d5f6f2790","$51ce273c1692e987$export$698f563af1ba02a5","$51ce273c1692e987$export$d4b8ec0b96db1ee2","destProjection","$51ce273c1692e987$export$96bfd09e2cffb006","$51ce273c1692e987$export$494be3a3a25689ca","$51ce273c1692e987$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$892afa8da6ff9c56$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$892afa8da6ff9c56$export$f883a24d5edde77c","$6f142810539a59f0$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$6f142810539a59f0$var$getSmoothClampedResolution","$6f142810539a59f0$export$d65a517690fc4385","resolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","z","$6f142810539a59f0$export$22ac0f6b219de91a","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$6f142810539a59f0$export$1c4e6da9b4b066fe","$639db43e7a8d515a$export$e20fbacbb41798b","$639db43e7a8d515a$export$f883a24d5edde77c","$9a77576133df9d74$export$929e5a82286172a6","$9a77576133df9d74$export$57636bb43b1ccbb0","$9a77576133df9d74$export$9b47139b511b56e4","$9a77576133df9d74$export$45db2fc2f15997e7","$a0a3dd962f5651db$exports","PROJECTIONS","$c0e91db6b9cdad65$exports","fromEPSG4326","toEPSG4326","$6c33523acda28428$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$93aa503286cf5212$export$b92b2dedcfff79de","opt_dest","dest","$93aa503286cf5212$export$bb628a54ab399bc9","anchor","anchorX","anchorY","$93aa503286cf5212$export$dcdf75081b88279d","$93aa503286cf5212$export$d73ee8ef04f5226a","$ea4264a4ff6265c9$var$tmpTransform","$ea4264a4ff6265c9$var$Geometry","Geometry1","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$ea4264a4ff6265c9$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$ea4264a4ff6265c9$export$2e2bcd8739ae039","$873446fe266f67e7$export$6af0c1b4a8549a43","layout","$873446fe266f67e7$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$873446fe266f67e7$export$2e2bcd8739ae039","SimpleGeometry1","$873446fe266f67e7$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$873446fe266f67e7$var$getLayoutForStride","$ea4264a4ff6265c9$exports","$72fefbd983bcbe6a$var$assignClosest","offset1","offset2","$72fefbd983bcbe6a$export$bc2eb611ddf80103","squaredDelta","$72fefbd983bcbe6a$export$fbf31c8f2668ed5a","ends","$72fefbd983bcbe6a$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$72fefbd983bcbe6a$export$5a48a0eefcf14992","$c8eff196dbbc07af$export$60815ead40ec79ab","$c8eff196dbbc07af$export$5c4daf67e03c190f","$c8eff196dbbc07af$export$47c3746a74384d45","coordinatess","opt_ends","jj","$c6bd32c4126fb342$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$c6bd32c4126fb342$export$51a0620f7a28532b","$c6bd32c4126fb342$export$b84e8d2c4920a0c6","$c6bd32c4126fb342$export$60a9904b67f8d51b","simplifiedEnds","$680fff1ff5967196$export$9c0934e4e9c3f61e","opt_coordinates","$680fff1ff5967196$export$cbb9596fc0f40db2","opt_coordinatess","$680fff1ff5967196$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$71997ce93cb9ec89$export$3c5e1905f889266e","twiceArea","$71997ce93cb9ec89$export$7a8ee541dfdf2ed5","$d331075f6abc3caf$export$2e2bcd8739ae039","LinearRing1","maxDelta_","maxDeltaRevision_","$d331075f6abc3caf$var$__extends","getArea","$873446fe266f67e7$exports","$e146c4255f752222$export$2e2bcd8739ae039","Point1","$e146c4255f752222$var$__extends","$a97abfe500512224$export$cedabedc7ac0e138","$a97abfe500512224$export$949a7a3a4b6f34fa","wn","$a97abfe500512224$export$ae868c0f6acc3355","$fbc665810373f014$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$1d929bbb982e7ad1$export$4b80e395e36b5a56","ret","$b9216567382fd63e$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$b9216567382fd63e$export$76dcd8f8f83b6ddb","$b9216567382fd63e$export$830a0dafbb2ef1c5","$765add36bcb2b344$export$741858880c96b18c","$58c39c2abab0d873$export$318f2842ed17e094","edge","$58c39c2abab0d873$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$58c39c2abab0d873$export$b71b604ddfc778c7","$494141410008044e$var$Polygon","Polygon1","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$494141410008044e$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$e146c4255f752222$exports","getLinearRingCount","getLinearRing","$d331075f6abc3caf$exports","getLinearRings","linearRings","$494141410008044e$export$2e2bcd8739ae039","$494141410008044e$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$494141410008044e$export$c16b671815801c75","$494141410008044e$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$494141410008044e$export$87d6a1539a56e47f","getRadius","startAngle","$b61ec8a9c26a15bd$var$View","View1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$b61ec8a9c26a15bd$var$__extends","resolutionConstraintInfo","$b61ec8a9c26a15bd$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","minZoom_","centerConstraint","$b61ec8a9c26a15bd$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$b61ec8a9c26a15bd$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$b61ec8a9c26a15bd$export$ee75376562060184","setHint","updateAnimations_","$b61ec8a9c26a15bd$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$b61ec8a9c26a15bd$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$494141410008044e$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","theta","opt_tolerance","enableRotation","constrainRotation","$b61ec8a9c26a15bd$export$2e2bcd8739ae039","$0b0c604ff213866b$export$622c471beb1693c7","$0b0c604ff213866b$export$a71a825ff42fb8e1","$e5de9654c10e65fa$var$removeLayerMapProperty","$fbe1f30b9b0811de$exports","$e5de9654c10e65fa$var$setLayerMapProperty","$e5de9654c10e65fa$export$2e2bcd8739ae039","PluggableMap1","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b61ec8a9c26a15bd$exports","$e5de9654c10e65fa$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$286f240d744f313a$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$e5de9654c10e65fa$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$308a4eee2e11ac9e$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$2378f1032abec9d1$export$2e2bcd8739ae039","Control1","target_","$2378f1032abec9d1$var$__extends","mapEvent","$a9244539d282f1c5$export$2e2bcd8739ae039","Attribution1","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$a9244539d282f1c5$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$2378f1032abec9d1$exports","$1e8af08824c3e884$export$2e2bcd8739ae039","Rotate1","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$1e8af08824c3e884$var$__extends","resetNorth_","$69299efdbde0e182$export$2e2bcd8739ae039","Zoom1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$69299efdbde0e182$var$__extends","zoomByDelta_","currentZoom","newZoom","$c2f4f7c3a952c48b$export$ebe90cb607ad99e","$69299efdbde0e182$exports","zoomOptions","$1e8af08824c3e884$exports","rotateOptions","attribution","$a9244539d282f1c5$exports","attributionOptions","$fdf462d5ee425342$export$2e2bcd8739ae039","ACTIVE","$855af52b0af99805$export$4c486572e961a974","$855af52b0af99805$export$ace321ff2a8016ef","$855af52b0af99805$export$2e2bcd8739ae039","Interaction1","setActive","$855af52b0af99805$var$__extends","active","$8685060a4398cf47$export$2e2bcd8739ae039","DoubleClickZoom1","delta_","$8685060a4398cf47$var$__extends","stopEvent","shiftKey","$855af52b0af99805$exports","zoomByDelta","$71c992dd435def6e$export$e2a20c553f6c85ce","$71c992dd435def6e$export$2e2bcd8739ae039","PointerInteraction1","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$71c992dd435def6e$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$71c992dd435def6e$var$isPointerDraggingEvent","$70da2eacd644b700$export$84bf76cd7afc7469","conditions","pass","$70da2eacd644b700$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$70da2eacd644b700$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$70da2eacd644b700$export$d7ddd398f22d79ef","$70da2eacd644b700$export$ba9e5d519bc326ca","$70da2eacd644b700$export$1238ad6b5e7fff70","$70da2eacd644b700$export$fdc892d0d8fe3bfb","$70da2eacd644b700$export$5d31fe68a477cfbb","$70da2eacd644b700$export$e5570ca80cd8fd54","tagName","$70da2eacd644b700$export$abb7acbfa76bf3c4","pointerType","$70da2eacd644b700$export$189f0d593022b199","isPrimary","$a559dc7f92aae2b9$export$2e2bcd8739ae039","DragPan1","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$a559dc7f92aae2b9$var$__extends","scale1","centroid","$71c992dd435def6e$exports","update","getDistance","getAngle","centerpx","$d59c9ac61cc50ba7$export$2e2bcd8739ae039","DragRotate1","lastAngle_","$d59c9ac61cc50ba7$var$__extends","$3a69a5cd3d9efe81$export$2e2bcd8739ae039","RenderBox1","geometry_","startPixel_","endPixel_","$3a69a5cd3d9efe81$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$ee7f737b890585b1$var$DragBoxEventType","$ee7f737b890585b1$export$7053c33c051365ea","DragBoxEvent1","$ee7f737b890585b1$var$__extends","$ee7f737b890585b1$export$2e2bcd8739ae039","DragBox1","box_","$3a69a5cd3d9efe81$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$8fefcee995bf9fa2$export$2e2bcd8739ae039","DragZoom1","out_","out","$8fefcee995bf9fa2$var$__extends","$ee7f737b890585b1$exports","$fabc923eab7b8d35$export$2e2bcd8739ae039","UP","DOWN","$58983494123aebad$export$2e2bcd8739ae039","KeyboardPan1","defaultCondition_","pixelDelta_","pixelDelta","$58983494123aebad$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$975fb2a1297d8301$export$2e2bcd8739ae039","KeyboardZoom1","$975fb2a1297d8301$var$__extends","charCode","charCodeAt","$16f8404d2308a2e3$export$2e2bcd8739ae039","Kinetic1","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bf6c611fd4e916b8$export$9484bbecc3c49a2e","TRACKPAD","$bf6c611fd4e916b8$export$2e2bcd8739ae039","MouseWheelZoom1","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$bf6c611fd4e916b8$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$116bb9adf1461407$export$2e2bcd8739ae039","PinchRotate1","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$116bb9adf1461407$var$__extends","rotationDelta","touch0","touch1","$59799bb9abb3d845$export$2e2bcd8739ae039","PinchZoom1","lastDistance_","lastScaleDelta_","$59799bb9abb3d845$var$__extends","scaleDelta","$73908c9ebef59c42$export$ebe90cb607ad99e","altShiftDragRotate","$d59c9ac61cc50ba7$exports","doubleClickZoom","$8685060a4398cf47$exports","zoomDelta","zoomDuration","dragPan","$a559dc7f92aae2b9$exports","pinchRotate","$116bb9adf1461407$exports","pinchZoom","$59799bb9abb3d845$exports","keyboard","$58983494123aebad$exports","$975fb2a1297d8301$exports","mouseWheelZoom","$bf6c611fd4e916b8$exports","shiftDragZoom","$8fefcee995bf9fa2$exports","$18255666c21c3e7d$export$2e2bcd8739ae039","Map1","$18255666c21c3e7d$var$__extends","$d8a652e4527f1969$exports","$e5de9654c10e65fa$exports","$7b709bd8225bc45f$export$687ff82efd78795b","o","length_1","cumulativeLengths","$7b709bd8225bc45f$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$b40fd18e7edc0f63$export$153f8c6b4d8caebc","$720fa649bbd4a7f1$export$2e2bcd8739ae039","LineString1","flatMidpoint_","flatMidpointRevision_","$720fa649bbd4a7f1$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","$6ce659ab3eb3d5ab$export$2e2bcd8739ae039","FeatureFormat1","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","$6ce659ab3eb3d5ab$export$7beeea566b560d4","write","transformed","power_1","$cf13a6053fbfb2c4$export$2e2bcd8739ae039","ARRAY_BUFFER","JSON","TEXT","XML","$623e0170398d2ae2$var$getText","$623e0170398d2ae2$export$2e2bcd8739ae039","TextFeature1","$623e0170398d2ae2$var$__extends","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","$cf353f70112e9440$export$42498d737b05108d","opt_destOffset","destOffset","$c021e7838ef767ef$export$f7f7aa721fb1892a","numbers","opt_factor","lastNumbers","num","$c021e7838ef767ef$export$a184f75f22d08c53","$c021e7838ef767ef$export$6dd1849a130b98c5","encoded","$c021e7838ef767ef$export$699b9297c43854f5","$c021e7838ef767ef$export$3625268a2f372206","$c021e7838ef767ef$export$8f60e357408ce6f6","$c021e7838ef767ef$export$c4734ac5b9f48936","$c021e7838ef767ef$export$511e57c5f7e959a9","$c021e7838ef767ef$export$62547fcf9689f3ed","current","fromCharCode","$c021e7838ef767ef$export$2e2bcd8739ae039","Polyline1","factor_","geometryLayout_","geometryLayout","$c021e7838ef767ef$var$__extends","$391871f9a2e5834b$exports","getStrideForLayout","$720fa649bbd4a7f1$exports","$623e0170398d2ae2$exports","$9cdf987200b0aa45$export$2e2bcd8739ae039","LRUCache1","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$93650dd9a7608979$export$2e2bcd8739ae039","Tile1","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","$93650dd9a7608979$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$c2632c8bbff4f1e5$export$2e2bcd8739ae039","ImageBase1","$c2632c8bbff4f1e5$var$__extends","getImage","getPixelRatio","$96f1769f0e2cd014$export$2e2bcd8739ae039","$8910981f7733f7b9$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper1","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$8910981f7733f7b9$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$c2632c8bbff4f1e5$exports","$479dcb8db4bda8fa$export$2e2bcd8739ae039","ImageTile1","tileLoadFunction","crossOrigin_","tileLoadFunction_","$479dcb8db4bda8fa$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$8910981f7733f7b9$exports","listenImage","$93650dd9a7608979$exports","$9a1cf96a930d5a58$var$brokenDiagonalRendering_","$288c3ce7a59688cb$export$2e2bcd8739ae039","Triangulation1","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$f78deeaa58c93f25$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$f78deeaa58c93f25$export$75f39f0ce198f93f","$9a1cf96a930d5a58$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$9a1cf96a930d5a58$var$verifyBrokenDiagonalRendering","$9a1cf96a930d5a58$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$9a1cf96a930d5a58$export$16d356211d01f1cc","$9a1cf96a930d5a58$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","getImageData","$9a1cf96a930d5a58$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","stroke","$fb80bc4c69234ab8$export$2e2bcd8739ae039","ReprojTile1","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$fb80bc4c69234ab8$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$f542b78ad7fc0677$export$958e3e1a02eac4b6","opt_tileCoord","$f542b78ad7fc0677$export$92d0df0f1d25c63c","$f542b78ad7fc0677$export$a47fb462a08de82f","$f542b78ad7fc0677$export$a807b7874eb66454","$f542b78ad7fc0677$export$d6af199866bfb566","$f542b78ad7fc0677$export$60bedf8e3e3c3dbe","tileRange","getFullTileRange","$5823c018e97cb242$var$TileCache","TileCache1","$5823c018e97cb242$var$__extends","pruneExceptNewestZ","$5823c018e97cb242$export$2e2bcd8739ae039","$4f588e6ca9a89608$export$2e2bcd8739ae039","TILELOADSTART","TILELOADEND","TILELOADERROR","$6fd1db52bb150087$var$adaptAttributions","attributionLike","$6fd1db52bb150087$export$2e2bcd8739ae039","Source1","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$6fd1db52bb150087$var$__extends","getInterpolate","refresh","setAttributions","$41c1f55d86eb0ee8$var$TileRange","TileRange1","containsTileRange","equals","getHeight","getWidth","intersects","$41c1f55d86eb0ee8$export$958e3e1a02eac4b6","$41c1f55d86eb0ee8$export$2e2bcd8739ae039","$6986c999812c2763$var$tmpTileCoord","$6986c999812c2763$export$2e2bcd8739ae039","TileGrid1","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","$b07b4a254fd8c72a$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$b07b4a254fd8c72a$var$resolutionsFromExtent","$b07b4a254fd8c72a$export$ce88871416242df8","$b07b4a254fd8c72a$export$7b5b6ef8fd55fac4","$b07b4a254fd8c72a$export$a251b12f5601c16f","$b07b4a254fd8c72a$export$39a9ce3624977b84","$b07b4a254fd8c72a$export$38500bbeccc864ff","xyzOptions","gridOptions","opt_maxResolution","half","$31e561e541184b11$var$TileSource","TileSource1","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$5823c018e97cb242$exports","tmpSize","tileOptions","zDirection","$31e561e541184b11$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","updateCacheSize","tileCount","useTile","$6fd1db52bb150087$exports","$31e561e541184b11$export$c571855c51e6c4b6","TileSourceEvent1","$31e561e541184b11$export$2e2bcd8739ae039","$6d3f395198882205$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$6d3f395198882205$export$436f44dbcc31fea3","templates","tileUrlFunctions","$6d3f395198882205$export$4229b1d9af69b3be","$6d3f395198882205$export$2a1fa079bfd73dde","url","urls","startCharCode","stopCharCode","stop_1","$5625bdab397b8065$export$2e2bcd8739ae039","UrlTile1","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","$5625bdab397b8065$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$31e561e541184b11$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","$3102cb6a48eb7b01$var$TileImage","TileImage1","imageSmoothing","$3102cb6a48eb7b01$var$defaultTileLoadFunction","tileClass","$479dcb8db4bda8fa$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$3102cb6a48eb7b01$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$fb80bc4c69234ab8$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$5625bdab397b8065$exports","imageTile","$3102cb6a48eb7b01$export$2e2bcd8739ae039","$c7284426848359a1$export$2e2bcd8739ae039","XYZ1","$c7284426848359a1$var$__extends","$3102cb6a48eb7b01$exports","$4613e68d4486e86c$export$4de8a5e77eb994ad","$4613e68d4486e86c$export$2e2bcd8739ae039","OSM1","$4613e68d4486e86c$var$__extends","$c7284426848359a1$exports","$4f0782892497891b$exports","t1","t2","r2","e2","a2","h2","u","p","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$d501bf52a5fdb98e$export$2e2bcd8739ae039","RBush1","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$2bc97527efdad423$export$2e2bcd8739ae039","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","$34a16b0e54877e09$export$84bf76cd7afc7469","$5da96d487b25628b$var$withCredentials","$5da96d487b25628b$export$14cc81df70b6707e","format","success","failure","xhr1","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$5da96d487b25628b$export$441d7b57adab24d0","addFeatures","$b636ac1ff32355bd$export$d402fd02dc2b661c","VectorSourceEvent1","opt_feature","opt_features","$b636ac1ff32355bd$var$__extends","$b636ac1ff32355bd$export$2e2bcd8739ae039","VectorSource1","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$96a2d97817de77d8$export$2e2bcd8739ae039","ImageStyle1","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$c89ac91ebd6de9e2$export$dc5b1400ac3a10a8","$aa6f93a15af91fc4$export$2e2bcd8739ae039","RegularShape1","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$aa6f93a15af91fc4$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$44eb67882e11d95b$export$2e2bcd8739ae039","CircleStyle1","$44eb67882e11d95b$var$__extends","setRadius","$aa6f93a15af91fc4$exports","$6c2904a346e8a113$export$2e2bcd8739ae039","Fill1","color_","setColor","$23ee047c53fc3d1c$export$2e2bcd8739ae039","FRACTION","$75d6b49f100392b4$export$2e2bcd8739ae039","$64d0fe27a1c2456e$var$taintedTestContext","$64d0fe27a1c2456e$var$IconImage","IconImage1","imageState","hitDetectionImage_","imageState_","tainted_","$64d0fe27a1c2456e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$64d0fe27a1c2456e$export$3988ae62b71be9a3","$4d16f53ba327d379$export$2e2bcd8739ae039","Icon1","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$64d0fe27a1c2456e$exports","offset_","offsetOrigin_","offsetOrigin","$4d16f53ba327d379$var$__extends","setAnchor","iconImageSize","$3076747ad25995d8$export$2e2bcd8739ae039","Stroke1","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$9576ac28723638ef$var$Style","Style1","geometryFunction_","$9576ac28723638ef$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$9576ac28723638ef$export$c314ea3f6b164147","styleFunction","$9576ac28723638ef$var$defaultStyles","$9576ac28723638ef$export$6865c5ac2f5ce8b6","$44eb67882e11d95b$exports","$9576ac28723638ef$export$2e2bcd8739ae039","$b8f9ef608258debf$export$2e2bcd8739ae039","PRELOAD","USE_INTERIM_TILES_ON_ERROR","$6d613fff339c23be$export$2e2bcd8739ae039","BaseTileLayer1","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$6d613fff339c23be$var$__extends","getPreload","getUseInterimTilesOnError","$94d311d3e85a3c42$export$2e2bcd8739ae039","LayerRenderer1","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$94d311d3e85a3c42$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$70e7b28f28588a87$var$pixelContext","$70e7b28f28588a87$export$2e2bcd8739ae039","CanvasLayerRenderer1","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$70e7b28f28588a87$var$__extends","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext1","pixelCanvas","Uint8Array","$94d311d3e85a3c42$exports","$4d5b4b2ec243336c$export$2e2bcd8739ae039","CanvasTileLayerRenderer1","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$4d5b4b2ec243336c$var$__extends","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$70e7b28f28588a87$exports","$9af931ecc3f060e8$export$2e2bcd8739ae039","TileLayer1","$9af931ecc3f060e8$var$__extends","$4d5b4b2ec243336c$exports","$6d613fff339c23be$exports","$16d3dc96393a4cc1$var$Property","$16d3dc96393a4cc1$export$2e2bcd8739ae039","BaseVectorLayer1","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$16d3dc96393a4cc1$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","$accd2c26c82bb2e9$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$accd2c26c82bb2e9$export$f21891651e408226","$accd2c26c82bb2e9$export$7a98aa5364d62ba8","$accd2c26c82bb2e9$export$9f746cc58a899a00","$accd2c26c82bb2e9$export$89b10f327e413e71","$accd2c26c82bb2e9$export$2e2bcd8739ae039","$8ce9a7fca4da49bf$export$2e2bcd8739ae039","VectorContext1","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$5da8d3b3b24d11fc$export$2e2bcd8739ae039","CanvasBuilder1","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$5da8d3b3b24d11fc$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$c11bdced0b9a81c9$export$2e2bcd8739ae039","CanvasImageBuilder1","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$c11bdced0b9a81c9$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$5da8d3b3b24d11fc$exports","$a1c607adb44daba4$export$2e2bcd8739ae039","CanvasLineStringBuilder1","$a1c607adb44daba4$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$c7cb6b0a8b35f2a7$export$2e2bcd8739ae039","CanvasPolygonBuilder1","$c7cb6b0a8b35f2a7$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$7a5b29aec00368aa$export$2e2bcd8739ae039","LINE","$3726f8bfced39bb2$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$690d1b56d0b26f57$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$690d1b56d0b26f57$export$2e2bcd8739ae039","CanvasTextBuilder1","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$690d1b56d0b26f57$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$b18b939817d37d3c$var$BATCH_CONSTRUCTORS","Circle","$c7cb6b0a8b35f2a7$exports","Default","$c11bdced0b9a81c9$exports","LineString","$a1c607adb44daba4$exports","Polygon","Text","$690d1b56d0b26f57$exports","$b18b939817d37d3c$export$2e2bcd8739ae039","BuilderGroup1","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$f7813185a05ce2a4$export$2e2bcd8739ae039","DEFAULT","IMAGE","$f21785605114342d$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$712585ac0ed150a1$var$tmpExtent","$712585ac0ed150a1$var$p1","$712585ac0ed150a1$var$p2","$712585ac0ed150a1$var$p3","$712585ac0ed150a1$var$p4","$712585ac0ed150a1$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$712585ac0ed150a1$var$rtlRegEx","$712585ac0ed150a1$var$horizontalTextAlign","align","test","TEXT_ALIGN","$712585ac0ed150a1$var$createTextChunks","acc","line","$712585ac0ed150a1$export$2e2bcd8739ae039","Executor1","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","reduce","_a","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p11","p21","p31","p41","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$e21e6c0c2e4854b9$var$ORDER","$e21e6c0c2e4854b9$var$ExecutorGroup","ExecutorGroup1","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$e21e6c0c2e4854b9$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$e21e6c0c2e4854b9$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$e21e6c0c2e4854b9$export$2e2bcd8739ae039","$9d54967724bc5601$export$2e2bcd8739ae039","CanvasImmediateRenderer1","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$9d54967724bc5601$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$21fcba48fe05b60d$export$ab51038298418f25","$21fcba48fe05b60d$export$bd05e394339d469","transforms","$9d54967724bc5601$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$4d16f53ba327d379$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$21fcba48fe05b60d$export$6d4d555ddbfffa32","resultFeatures","$963bb735b2ca135f$var$GEOMETRY_RENDERERS","Point","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$963bb735b2ca135f$export$531ddd8416d52dfc","feature1","feature2","$963bb735b2ca135f$export$75084a70d324c1e6","$963bb735b2ca135f$export$bdacc5b475012edb","$963bb735b2ca135f$export$36f470a33a42f413","$963bb735b2ca135f$var$renderGeometry","$963bb735b2ca135f$var$renderFeatureInternal","getGeometries","$afbb030f8356b013$export$2e2bcd8739ae039","CanvasVectorLayerRenderer1","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$afbb030f8356b013$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","clipped","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","declutterBuilderGroup","userTransform","userExtent_1","dirty","renderFeature","userExtent","replayGroupInstructions","$2682b71b2901dd5b$export$2e2bcd8739ae039","VectorLayer1","$2682b71b2901dd5b$var$__extends","$afbb030f8356b013$exports","$16d3dc96393a4cc1$exports","$42467e23e1a5ed75$var$mapView","$42467e23e1a5ed75$var$map","$18255666c21c3e7d$exports","$9af931ecc3f060e8$exports","$4613e68d4486e86c$exports","polyline","geo","route","$c021e7838ef767ef$exports","routeFeature","startMarker","endMarker","geoMarker","icon","$2682b71b2901dd5b$exports","$b636ac1ff32355bd$exports","toRemove","Set","isRoute","__proto__"],"version":3,"file":"index.bd278149.js.map"}